name: Build and Test

permissions:
  contents: read
  pull-requests: read

on:
  push:
    paths-ignore:
      - "*.md"
    branches:
      - main
  pull_request:
    paths-ignore:
      - "*.md"
    branches:
      - main
  workflow_dispatch:

env:
  COMPOSER_NO_INTERACTION: 1
  COMPOSER_PROCESS_TIMEOUT: 300 # Seconds.

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      - name: Update platform's packages database
        run: sudo apt-get update

      - name: Install platform tools
        run: sudo apt-get install -y libxml2-utils yamllint jq

      - name: Clone project
        uses: actions/checkout@v4

      - name: Lint YAML files
        run: find . -type f -name "*.yml" -exec yamllint {} \;

      - name: Lint XML files
        run: find . -type f -name "*.xml" -exec xmllint --noout {} \;

      - name: Lint JSON files
        run: find . -type f -name "*.json" -not -path "./vendor/*" -exec sh -c 'jq empty "$0"' {} \;

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          coverage: none
          extensions: zip
          tools: composer:v2
          ini-values: memory_limit=256M, zend.assertions=1, error_reporting=-1, display_errors=On

      - name: Lint PHP files
        run: |
          set -e  # Stop on error.
          find . -path ./vendor -prune -o -name "*.php" -print0 | xargs -0 -n 1 php -l

      - name: Validate manifest file
        run: composer validate --strict

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --ansi --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Lint codes
        run: composer lint

      - name: Check refactoring
        run: composer refactor-check

      - name: Check coding style
        run: composer format-check

      - name: Security check
        run: composer audit

      - name: Run tests
        run: composer test

      - name: Use tool
        run: php bin/phpmake.php package

      - name: Validate build.json
        run: >-
          php -r ' $config = json_decode(file_get_contents("build.json"), true);
          if (!isset($config["targets"]["package"])) { echo "build.json missing
          'package' target\n"; exit(1); }'
